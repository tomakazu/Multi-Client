#include<iostream>
#include<ws2tcpip.h>
#include<string>
using namespace std;
#pragma comment(lib,"ws2_32.lib")


void main() {

	string ipAddress = "127.0.0.1";		//IP Address of the server
	int port = 54000;					//Listening port on the sever

	//Initialize Winsock 

	WSADATA data;
	WORD ver = MAKEWORD(2, 2);
	int wsResult = WSAStartup(ver, &data);
	if (wsResult != 0) {
		cerr << " Can't initialize winsock " << endl;
		return;
	}

	//Create socket

	SOCKET sock = socket(AF_INET, SOCK_STREAM, 0);
	if (sock == INVALID_SOCKET) {
		cerr << "Can't create a socket " << WSAGetLastError() << endl;
		closesocket(sock);
		WSACleanup();
		return;
	}

	//Fill in a hint structure

	sockaddr_in hint;
	hint.sin_family = AF_INET;
	hint.sin_port = htons(port);
	inet_pton(AF_INET, ipAddress.c_str(), &hint.sin_addr);

	//Connect to the server

	int connResult = connect(sock, (sockaddr*)&hint, sizeof(hint));
	if (connResult == SOCKET_ERROR) {

		cerr << " Can't connect to the server " << WSAGetLastError() << endl;
		closesocket(sock);
		WSACleanup();
		return;
	}

	//Do-While loop to send and receive data

	char b[4096];
	int bytes = recv(sock,b,4096, 0);
	
	cout << string(b, 0, bytes) << endl;
	
	char buff[4096];
	string userInput;
	
	
	do {
		//Prompt the user

		//cout << ">";
		userInput = "";
		//Send the result

		int sendResult = send(sock, userInput.c_str(), userInput.size() + 1, 0);
		if (sendResult != SOCKET_ERROR) {
		ZeroMemory(buff, 0);
		int bytesrecieved = recv(sock, buff, 4096, 0);
		
		//if (bytesrecieved > 0) {
		//Echo response to console
		cout << "SERVER> " << string(buff, 0, bytesrecieved) << endl;
		}
		//}

	} while (true);

	//Shut down everything

	closesocket(sock);
	WSACleanup();
}
